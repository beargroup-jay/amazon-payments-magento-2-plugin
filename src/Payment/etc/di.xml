<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!-- Begin gateway config -->
    <!-- Payment Method Facade configuration -->
    <virtualType name="AmazonFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">\Amazon\Payment\Model\Ui\ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">AmazonValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">AmazonCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="AmazonConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">\Amazon\Payment\Model\Ui\ConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Logger, initialized with AmazonConfig -->
    <virtualType name="AmazonLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">AmazonConfig</argument>
        </arguments>
    </virtualType>

    <type name="Amazon\Payment\Gateway\Http\Client\Client">
        <arguments>
            <argument name="logger" xsi:type="object">AmazonLogger</argument>
        </arguments>
    </type>

    <!-- Commands infrastructure -->
    <virtualType name="AmazonCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">AmazonAuthorizeCommand</item>
                <item name="capture" xsi:type="string">AmazonCaptureCommand</item>
                <item name="void" xsi:type="string">AmazonVoidCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Authorize command -->
    <virtualType name="AmazonAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AmazonAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">AmazonResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Amazon\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Amazon\Payment\Gateway\Http\Client\Client</argument>
        </arguments>
    </virtualType>

    <!-- Authorization Request -->
    <virtualType name="AmazonAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Amazon\Payment\Gateway\Request\AuthorizationRequest</item>
                <item name="mockData" xsi:type="string">Amazon\Payment\Gateway\Request\MockDataRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Amazon\Payment\Gateway\Request\AuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">AmazonConfig</argument>
        </arguments>
    </type>

    <!-- Capture command -->
    <virtualType name="AmazonCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">Amazon\Payment\Gateway\Request\CaptureRequest</argument>
            <argument name="handler" xsi:type="object">Amazon\Payment\Gateway\Response\TxnIdHandler</argument>
            <argument name="transferFactory" xsi:type="object">Amazon\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">Amazon\Payment\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">Amazon\Payment\Gateway\Http\Client\Client</argument>
        </arguments>
    </virtualType>

    <!-- Capture Request -->
    <type name="Amazon\Payment\Gateway\Request\CaptureRequest">
        <arguments>
            <argument name="config" xsi:type="object">Amazon\Payment\Model\Ui\ConfigProvider</argument>
            <argument name="coreHelper" xsi:type="object">Amazon\Core\Helper\Data</argument>
            <argument name="productMetadata" xsi:type="object">Magento\Framework\App\ProductMetadata</argument>
        </arguments>
    </type>

    <!-- Void command -->
    <virtualType name="AmazonVoidCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">Amazon\Payment\Gateway\Request\VoidRequest</argument>
            <argument name="handler" xsi:type="object">Amazon\Payment\Gateway\Response\TxnIdHandler</argument>
            <argument name="transferFactory" xsi:type="object">Amazon\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">Amazon\Payment\Gateway\Validator\ResponseCodeValidator</argument>
            <argument name="client" xsi:type="object">Amazon\Payment\Gateway\Http\Client\Client</argument>
        </arguments>
    </virtualType>

    <!-- Void Request -->
    <type name="Amazon\Payment\Gateway\Request\VoidRequest">
        <arguments>
            <argument name="config" xsi:type="object">AmazonConfig</argument>
        </arguments>
    </type>

    <!-- Response handlers -->
    <virtualType name="AmazonResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="txnid" xsi:type="string">Amazon\Payment\Gateway\Response\TxnIdHandler</item>
                <item name="fraud" xsi:type="string">Amazon\Payment\Gateway\Response\FraudHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="AmazonValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AmazonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AmazonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">AmazonConfig</argument>
        </arguments>
    </virtualType>

    <type name="Amazon\Payment\Block\Info">
        <arguments>
            <argument name="config" xsi:type="object">AmazonConfig</argument>
        </arguments>
    </type>

    <!-- end gateway config -->

    <preference for="Amazon\Payment\Api\OrderInformationManagementInterface" type="Amazon\Payment\Model\OrderInformationManagement" />
    <preference for="Amazon\Payment\Api\AddressManagementInterface" type="Amazon\Payment\Model\AddressManagement" />
    <preference for="Amazon\Payment\Api\PaymentManagementInterface" type="Amazon\Payment\Model\PaymentManagement" />
    <preference for="Amazon\Payment\Api\PaymentManagement\CaptureInterface" type="Amazon\Payment\Model\PaymentManagement\Capture" />
    <preference for="Amazon\Payment\Api\PaymentManagement\AuthorizationInterface" type="Amazon\Payment\Model\PaymentManagement\Authorization" />
    <preference for="Amazon\Payment\Api\Data\QuoteLinkInterface" type="Amazon\Payment\Model\QuoteLink" />
    <preference for="Amazon\Payment\Api\Data\OrderLinkInterface" type="Amazon\Payment\Model\OrderLink" />
    <preference for="Amazon\Payment\Api\Data\PendingCaptureInterface" type="Amazon\Payment\Model\PendingCapture" />
    <preference for="Amazon\Payment\Api\Data\PendingAuthorizationInterface" type="Amazon\Payment\Model\PendingAuthorization" />
    <preference for="Amazon\Payment\Api\Data\PendingRefundInterface" type="Amazon\Payment\Model\PendingRefund" />
    <preference for="Amazon\Payment\Ipn\IpnHandlerFactoryInterface" type="Amazon\Payment\Ipn\IpnHandlerFactory" />
    <preference for="AmazonPay\IpnHandlerInterface" type="Amazon\Payment\Ipn\IpnHandler" />
    <preference for="Amazon\Payment\Api\Ipn\CompositeProcessorInterface" type="Amazon\Payment\Model\Ipn\CompositeProcessor" />
    <type name="Magento\Quote\Api\CartRepositoryInterface">
        <plugin name="amazon_payment_quote_repository" type="Amazon\Payment\Plugin\QuoteRepository" sortOrder="1" />
    </type>
    <type name="Magento\Checkout\Api\ShippingInformationManagementInterface">
        <plugin name="amazon_payment_shipping_information_management" type="Amazon\Payment\Plugin\ShippingInformationManagement" sortOrder="1" />
    </type>
    <type name="Magento\Quote\Api\Data\PaymentInterface">
        <plugin name="amazon_payment_additional_information" type="Amazon\Payment\Plugin\AdditionalInformation" />
    </type>
    <type name="Magento\Sales\Controller\Adminhtml\Order\Invoice\Save">
        <plugin name="amazon_payment_invoice_save" type="Amazon\Payment\Plugin\InvoiceSave" sortOrder="1" />
    </type>
    <type name="Amazon\Payment\Cron\ProcessAmazonRefunds">
        <arguments>
            <argument name="paymentManagement" xsi:type="object">Amazon\Payment\Api\PaymentManagementInterface\Proxy</argument>
        </arguments>
    </type>
    <type name="Amazon\Payment\Cron\GetAmazonCaptureUpdates">
        <arguments>
            <argument name="paymentManagement" xsi:type="object">Amazon\Payment\Api\PaymentManagementInterface\Proxy</argument>
        </arguments>
    </type>
    <type name="Amazon\Payment\Model\QueuedRefundUpdater">
        <arguments>
            <argument name="adminNotifier" xsi:type="object">Magento\Framework\Notification\NotifierInterface\Proxy</argument>
        </arguments>
    </type>
    <type name="Magento\Sales\Api\TransactionRepositoryInterface">
        <plugin name="amazon_payment_transaction_repository" type="Amazon\Payment\Plugin\TransactionRepository" sortOrder="1" />
    </type>
    <type name="Amazon\Payment\Api\Ipn\CompositeProcessorInterface">
        <arguments>
            <argument name="processors" xsi:type="array">
                <item name="captureprocessor" xsi:type="object">Amazon\Payment\Model\Ipn\CaptureProcessor\Proxy</item>
                <item name="authorizationprocessor" xsi:type="object">Amazon\Payment\Model\Ipn\AuthorizationProcessor\Proxy</item>
                <item name="orderprocessor" xsi:type="object">Amazon\Payment\Model\Ipn\OrderProcessor\Proxy</item>
                <item name="refundprocessor" xsi:type="object">Amazon\Payment\Model\Ipn\RefundProcessor\Proxy</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="amazonIpnLogger" type="Magento\Framework\Logger\Monolog">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="debug" xsi:type="object">Amazon\Core\Logger\Handler\Ipn</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Amazon\Payment\Ipn\IpnHandlerFactoryInterface">
        <arguments>
            <argument name="logger" xsi:type="object">amazonIpnLogger</argument>
        </arguments>
    </type>
    <type name="Magento\Framework\Webapi\ErrorProcessor">
        <plugin name="amazon_payment_webapi_error_processor" type="Amazon\Payment\Plugin\WebapiErrorProcessor" sortOrder="1" />
    </type>
    <type name="Magento\Framework\Mail\MessageInterface" shared="false" />
    <type name="Amazon\Payment\Model\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Amazon\Payment\Model\Method\Amazon::PAYMENT_METHOD_CODE</argument>
        </arguments>
    </type>
    <type name="Amazon\Payment\Helper\Shortcut\Validator">
        <arguments>
            <argument name="amazonConfig" xsi:type="object">Amazon\Payment\Model\Config</argument>
        </arguments>
    </type>
</config>
